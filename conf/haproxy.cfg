####################全局配置信息#############参数是进程级的，通常和操作系统（OS）相关######### 

global 

	maxconn 20480                    #默认最大连接数 

	log 127.0.0.1 local3             #[err warning info debug] 

	# chroot /usr/local/haproxy        #chroot运行的路径 

	#uid 99                          #所属运行的用户uid 

	#gid 99                           #所属运行的用户组 

	user haproxy

	group haproxy

	daemon                          #以后台形式运行haproxy 

	nbproc 4                       #进程数量(可以设置多个进程提高性能) 

	#pidfile /home/haproxy/haproxy.pid     #haproxy的pid存放路径,启动进程的用户必须有权限访问此文件 

	ulimit-n 65535                   #ulimit的数量限制 


#####################默认的全局设置##############这些参数可以被利用配置到frontend，backend，listen组件## 

defaults 

	log global 

	mode http                        #所处理的类别 (#7层 http;4层tcp  ) 

	maxconn 20480                   #最大连接数 

	option httplog                   #日志类别http日志格式 

	option httpclose                 #每次请求完毕后主动关闭http通道 

	option dontlognull               #不记录健康检查的日志信息 

	option forwardfor               #如果后端服务器需要获得客户端真实ip需要配置的参数，可以从Http Header中获得客户端ip  

	option redispatch               #serverId对应的服务器挂掉后,强制定向到其他健康的服务器  

	option abortonclose              #当服务器负载很高的时候，自动结束掉当前队列处理比较久的连接 

	stats refresh 30                 #统计页面刷新间隔 

	retries 3                        #3次连接失败就认为服务不可用，也可以通过后面设置 

	balance roundrobin               #默认的负载均衡的方式,轮询方式 

	#balance source                   #默认的负载均衡的方式,类似nginx的ip_hash,可以固定session

	#balance leastconn                 #默认的负载均衡的方式,最小连接 

	timeout connect 5000                  #连接超时5s , 单位是ms

	timeout client 50000                 #客户端超时 

	timeout server 50000                #服务器超时 

	timeout check 2000               #心跳检测超时 


####################监控页面的设置####################### 

# listen admin_status                     #Frontend和Backend的组合体,监控组的名称，按需自定义名称 

# 	bind :65532                  #监听端口 

# 	mode http                      #http的7层模式 

# 	log 127.0.0.1 local3 err        #错误日志记录 

# 	stats refresh 5s               #每隔5秒自动刷新监控页面 

# 	stats uri /admin?stats          #监控页面的url 

# 	stats realm Haproxy\ Statistics  #监控页面的提示信息 

# 	stats auth admin:admin      #监控页面的用户和密码admin, 可以设置多个用户名 

# 	#stats auth other:other        #监控页面的用户和密码other

# 	stats hide-version              #隐藏统计页面上的HAproxy版本信息  

# 	stats admin if TRUE           #手工启用/禁用,后端服务器(haproxy-1.4.9以后版本) 

listen stats
	bind 0.0.0.0:1080           #监听端口  
	stats refresh 30s           #统计页面自动刷新时间  
	stats uri /stats            #统计页面url  
	stats realm Haproxy Manager #统计页面密码框上提示文本  
	stats auth admin:admin      #统计页面用户名和密码设置  
	#stats hide-version         #隐藏统计页面上HAProxy的版本信息


# ########frontend前端配置##############
# frontend main
# 　　bind *:80 #这里建议使用bind *:80的方式，要不然做集群高可用的时候有问题，vip切换到其他机器就不能访问了。
# 　　acl web hdr(host) -i www.abc.com  #acl后面是规则名称，-i为忽略大小写，后面跟的是要访问的域名，如果访问www.abc.com这个域名，就触发web规则，。
# 　　acl img hdr(host) -i img.abc.com  #如果访问img.abc.com这个域名，就触发img规则。
# 　　use_backend webserver if web   #如果上面定义的web规则被触发，即访问www.abc.com，就将请求分发到webserver这个作用域。
# 　　use_backend imgserver if img   #如果上面定义的img规则被触发，即访问img.abc.com，就将请求分发到imgserver这个作用域。
# 　　default_backend dynamic #不满足则响应backend的默认页面

# ########backend后端配置##############
# backend webserver #webserver作用域
# 　　mode http
# 　　balance roundrobin #balance roundrobin 负载轮询，balance source 保存session值，支持static-rr，leastconn，first，uri等参数
# 　　option httpchk /index.html HTTP/1.0 #健康检查, 检测文件，如果分发到后台index.html访问不到就不再分发给它
# 　　server web1 10.16.0.9:8085 cookie 1 weight 5 check inter 2000 rise 2 fall 3
# 　　server web2 10.16.0.10:8085 cookie 2 weight 3 check inter 2000 rise 2 fall 3
# 　　#cookie 1表示serverid为1，check inter 1500 是检测心跳频率 1500ms 
# 　　#rise 2是2次正确认为服务器可用，fall 3是3次失败认为服务器不可用，weight代表权重

# backend imgserver
# 　　mode http
# 　　option httpchk /index.php
# 　　balance roundrobin 
# 　　server img01 192.168.137.101:80 check inter 2000 fall 3
# 　　server img02 192.168.137.102:80 check inter 2000 fall 3

# backend dynamic 
# 　　balance roundrobin 
# 　　server test1 192.168.1.23:80 check maxconn 2000 
# 　　server test2 192.168.1.24:80 check maxconn 2000


# listen tcptest 
# 　　bind 0.0.0.0:5222 
# 　　mode tcp 
# 　　option tcplog #采用tcp日志格式 
# 　　balance source 
# 　　#log 127.0.0.1 local0 debug 
# 　　server s1 192.168.100.204:7222 weight 1 
# 　　server s2 192.168.100.208:7222 weight 1

listen test
	bind 0.0.0.0:18081 
	mode tcp
	option tcplog
	balance roundrobin
	#log 127.0.0.1 local0 debug 
	server s1 10.10.13.106:18081 weight 1 check inter 100 rise 2 fall 3
